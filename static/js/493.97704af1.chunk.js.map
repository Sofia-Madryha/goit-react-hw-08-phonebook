{"version":3,"file":"static/js/493.97704af1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts.module.css?8552","redux/contacts/selectors.js","components/ContactCard/ContactCard.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filters.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    console.log(selectVisibleContacts);\n    if (filter === '') {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Delete} from '@mui/icons-material';\nimport {IconButton, List, ListItem, ListItemText } from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactCard = ({ contactInfo: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      <ListItem>\n        <ListItemText primary={name} secondary={number} />\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => {\n            handleDelete(id);\n          }}\n        >\n          <Delete color=\"primary\" />\n        </IconButton>\n      </ListItem>\n    </List>\n  );\n};\n","import { ContactCard } from 'components/ContactCard/ContactCard';\nimport { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactCard contactInfo={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Box, Button, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport * as Yup from 'yup';\n\nconst contactSchema = Yup.object({\n  name: Yup.string('Enter your email').required('Name is required'),\n  number: Yup.string()\n    .matches(/^\\d{3}-\\d{3}-\\d{3}$/, 'Must be in format: 000-000-000')\n    .required('This field is required, please fill it'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = value => {\n    console.log(value);\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === value.name.toLowerCase()\n    );\n    if (nameExists) {\n      alert(`${value.name}' is already in contacts.`);\n    } else {\n      console.log(addContact(value));\n      dispatch(addContact(value));\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: contactSchema,\n    onSubmit: (values, actions) => {\n      handleSubmit(values);\n      actions.resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={formik.handleSubmit}\n      >\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"Name\"\n          variant=\"standard\"\n          name=\"name\"\n          type=\"text\"\n          required\n          placeholder=\"Jacob Mecker\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          variant=\"standard\"\n          name=\"number\"\n          label=\"Number\"\n          type=\"tel\"\n          value={formik.values.number}\n          placeholder=\"000-000-000\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n        <Button variant=\"outlined\" type=\"submit\">\n          Submit\n        </Button>\n      </Box>\n    </div>\n  );\n};\n","import { TextField } from '@mui/material';\nimport { useDispatch} from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter =>  dispatch(setFilter(filter));\n\n\n  return (\n    <div>\n      <TextField\n      id=\"outlined-basic\" label=\"Find by name\" variant=\"outlined\" size=\"small\" margin=\"dense\"\n        type=\"text\"\n        onChange={evt => handleFilterChange(evt.target.value)}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css  from './Contacts.module.css';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n\n      <div className={css.container}>\n        <Filter />\n\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filters","filter","console","log","contact","name","toLowerCase","includes","ContactCard","contactInfo","id","number","dispatch","useDispatch","List","sx","width","maxWidth","bgcolor","ListItem","ListItemText","primary","secondary","IconButton","onClick","deleteContact","Delete","color","ContactList","visibleContacts","useSelector","map","contactSchema","Yup","required","matches","ContactForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","actions","value","some","alert","addContact","resetForm","Box","component","m","noValidate","autoComplete","handleSubmit","TextField","fullWidth","label","variant","type","placeholder","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","Button","Filter","size","margin","evt","target","setFilter","Contacts","useEffect","fetchContacts","className","css"],"sourceRoot":""}